{"ast":null,"code":"const handleLogin = async () => {\n  try {\n    const response = await fetch('http://localhost:8080/api/usuarios', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        nombre: nombre\n      }) // Añade los datos que necesites\n    });\n    if (response.ok) {\n      console.log('Usuario registrado con éxito');\n    } else {\n      console.error('Error al registrar usuario');\n    }\n  } catch (error) {\n    console.error('Error en la comunicación con el servidor:', error);\n  }\n};","map":{"version":3,"names":["handleLogin","response","fetch","method","headers","body","JSON","stringify","username","nombre","ok","console","log","error"],"sources":["C:/Users/USUARIO/Documents/GitHub/Sistema_Mensajer-a/mensajeria/frontend/src/components/Login.js"],"sourcesContent":["const handleLogin = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:8080/api/usuarios', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username: username, nombre: nombre }) // Añade los datos que necesites\r\n        });\r\n\r\n        if (response.ok) {\r\n            console.log('Usuario registrado con éxito');\r\n        } else {\r\n            console.error('Error al registrar usuario');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error en la comunicación con el servidor:', error);\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ,EAAEA,QAAQ;QAAEC,MAAM,EAAEA;MAAO,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC,MAAM;MACHD,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;EACrE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}