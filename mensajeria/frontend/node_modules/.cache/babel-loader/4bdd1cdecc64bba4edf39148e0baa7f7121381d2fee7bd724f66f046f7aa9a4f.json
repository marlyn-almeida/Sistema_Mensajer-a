{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\Sistema_Mensajer-a\\\\mensajeria\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onRegister\n}) {\n  _s();\n  const [nombre, setNombre] = useState('');\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate(); // Redirecci贸n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!nombre || !username) {\n      alert(\"Por favor, complete ambos campos.\");\n      return;\n    }\n    const usuario = {\n      nombre,\n      username\n    };\n    try {\n      const response = await fetch('http://localhost:8080/api/usuarios', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(usuario)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onRegister(data.username); // Pasa el nombre de usuario al padre (App)\n        alert(\"Usuario registrado exitosamente\");\n        navigate(\"/salas\"); // Redirige a la pantalla de salas\n      } else {\n        alert(\"Error al registrar el usuario\");\n      }\n    } catch (error) {\n      console.error(\"Error al hacer la solicitud:\", error);\n      alert(\"Error en la comunicaci贸n con el servidor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: nombre,\n        onChange: e => setNombre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre de usuario\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"6sdyxINByYMUFa9xyW9JkQK5RJU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","onRegister","_s","nombre","setNombre","username","setUsername","navigate","handleSubmit","e","preventDefault","alert","usuario","response","fetch","method","headers","body","JSON","stringify","ok","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Documents/GitHub/Sistema_Mensajer-a/mensajeria/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Login({ onRegister }) {\r\n    const [nombre, setNombre] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const navigate = useNavigate(); // Redirecci贸n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!nombre || !username) {\r\n            alert(\"Por favor, complete ambos campos.\");\r\n            return;\r\n        }\r\n\r\n        const usuario = { nombre, username };\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/usuarios', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(usuario),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                onRegister(data.username);  // Pasa el nombre de usuario al padre (App)\r\n                alert(\"Usuario registrado exitosamente\");\r\n                navigate(\"/salas\"); // Redirige a la pantalla de salas\r\n            } else {\r\n                alert(\"Error al registrar el usuario\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error al hacer la solicitud:\", error);\r\n            alert(\"Error en la comunicaci贸n con el servidor.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>Registrarse</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre\"\r\n                    value={nombre}\r\n                    onChange={(e) => setNombre(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre de usuario\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Registrarse</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}